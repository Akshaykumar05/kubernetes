------------K8s Installation------------

sudo su
apt-get update

#Now install https package
apt-get install apt-transport-https

# This needed for intra cluster communication (particularly from control plan to individual pods)

# Now install docker on all 3 instances
apt install docker.io -y

#To check, whether docker is installed or not
docker --version
systemctl start docker
systemctl enable docker

#Set up  GPG key. This is required for intra cluster communication, it will be added to source by key on this node i.e. when k8s sends signed info to our host, it is going to accept those information because  this open GPG key present in the source key.

curl -s https://packages cloud.google.com/apt/doc/apt-key.apg | sudo apt-key add

# Edit source list file (apt-get install nano)

nano /etc/apt/source.list.d/Kubernetes.list
deb http://apt.Kubernetes.io/Kubernetes-xenial.main

--> exit from nano --> ctrl+X  --> caps+Y --> enter

apt-get update --> Install all packages
apt-get update -y kubelet Kubeadm Kubectl Kubernetes-cni

-----------------

# Bootstrapping the Master Node (in Master) .. To initialize K8s cluster
kubeadm init

# You will get one long command started from "Kubeadm join 172 316 165 6443..."  copy the command and save on notepad (in master only)

# Create both kube and its parent directory (-p)
mkdir -p $home/.kube

# Copy configuration to kube directory (in config file)
sudo cp -i /etc/Kubernetes/admin.conf $home /.kube/confg

# Provide user permission to copy config file
chown $(id-u):$(id-g)$home/.kube/config


# Deploy flannel node network for its repository path flannel is going to place a binary in each node.

sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifest/kube-flannel-rbac.yml


# Configure worker node

--> paste long command in both the node

--> go to master, run
kubectl get node